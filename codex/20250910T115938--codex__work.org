#+title:      codex
#+date:       [2025-09-10 Wed 11:59]
#+filetags:   :work:
#+identifier: 20250910T115938

* tangle
#+begin_src elisp
(let* ((conf-dir (pcase system-type
                   ('windows-nt (substitute-in-file-name "$userprofile/.codex/"))
                   (_ (expand-file-name "~/.codex/")))))
  (mkdir conf-dir t)
  (dolist (f (org-babel-tangle))
    (make-symbolic-link f conf-dir t)))
#+end_src

* config
:PROPERTIES:
:CUSTOM_ID: d8a4f6d4-d907-45d7-aec8-208d2353b81e
:END:
** main
:PROPERTIES:
:CUSTOM_ID: 2726e3c5-3391-4dc0-af41-b0df5a024f78
:END:
#+begin_src toml :tangle (zr-org-by-tangle-dir "config.toml") :mkdirp t
experimental_use_rmcp_client = true
model_provider = "88code"
model = "gpt-5-codex"
model_reasoning_effort = "high"
disable_response_storage = true
sandbox_mode = "workspace-write" 

[model_providers.88code]
name = "88code"
base_url = "https://88code.org/openai/v1"
wire_api = "responses"
env_key = "key88"
requires_openai_auth = true

[sandbox_workspace_write]
network_access = true
#+end_src
** auth
:PROPERTIES:
:CUSTOM_ID: bb6a8f50-0139-42ad-9db0-7b9a3eed9323
:END:
#+header: :var 88_api_key=(auth-source-pick-first-password :user "apikey" :host "88code.org")
#+begin_src json :tangle (zr-org-by-tangle-dir "auth.json")
{
  "OPENAI_API_KEY": "$88_api_key"
}
#+end_src
