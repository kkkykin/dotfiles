#+title:      bash
#+date:       [2024-12-30 Mon 15:30]
#+filetags:   :linux:
#+identifier: 20241230T153038
#+property: header-args :mkdirp t

* tangle
#+begin_src elisp
(org-babel-tangle)

(when-let* ((rc (pcase system-type
                  ('gnu/linux (expand-file-name "~/.bashrc"))
                  ('android (expand-file-name "home/.bashrc" zr-termux-root-directory)))))
  (when (file-exists-p rc)
    (unless (file-symlink-p rc)
      (rename-file rc (concat rc ".bak"))))
  (make-symbolic-link (expand-file-name "_tangle/rc/general") rc t))
#+end_src

* rc
:PROPERTIES:
:tangle-dir: _tangle/rc
:END:
** general
:PROPERTIES:
:header-args:sh: :tangle (zr-org-by-tangle-dir "general")
:END:

*** non-interactive

**** gpg
:PROPERTIES:
:CUSTOM_ID: 22b4d733-f226-4aed-9eeb-94fc59252605
:END:
#+begin_src sh
SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
export SSH_AUTH_SOCK
#+end_src

**** smb
:PROPERTIES:
:CUSTOM_ID: c8001f32-0dfa-46cd-8535-dccfa3617373
:END:
#+begin_src sh
check_smb_connection() {
  local uri=$1
  curl "$uri" -m1 >/dev/null 2>&1
  [ $? -eq 67 ]
}
#+end_src

**** rclone
:PROPERTIES:
:CUSTOM_ID: de7954e3-446a-4f54-b192-9f443ab6d919
:END:
#+begin_src sh
rclone_sync_dir() {
  local parent=$1
  local file=$2
  local remote=$3
  env -C "$parent" rclone bisync \
    --remove-empty-dirs \
    --conflict-resolve newer \
    "$file" "$remote"
}
#+end_src

**** by-system
:PROPERTIES:
:CUSTOM_ID: e5567631-0383-469b-b0a3-11ab1d77ed31
:END:
#+begin_src sh :var system_rc_file=(expand-file-name (pcase system-type ('android "termux") (_ "/dev/null")) "_tangle/rc")
. "$system_rc_file"
#+end_src

**** local
:PROPERTIES:
:CUSTOM_ID: 9621e339-c4b8-4144-9ed7-e9372f90c701
:END:
#+begin_src sh :var local_rc_file=(expand-file-name "_local")
if [[ -x "$local_rc_file" ]]; then
  . "$local_rc_file"
fi
#+end_src

*** interactive
:PROPERTIES:
:CUSTOM_ID: e06846d6-1213-4d8a-acf6-5012f3e47de0
:END:

#+begin_src sh
[[ $- == *i* ]] || return
#+end_src

**** gpg
:PROPERTIES:
:CUSTOM_ID: e588620f-76c4-43c2-8a95-284e34bd2e8f
:END:
#+begin_src sh
if [ -z "$INSIDE_EMACS" ] && [ "$TERM" != "DUMB" ]; then
    GPG_TTY="$(tty)"
    export GPG_TTY
    gpg-connect-agent updatestartuptty /bye > /dev/null
fi    
#+end_src

**** pnpm
:PROPERTIES:
:CUSTOM_ID: 252bffe8-6ac6-40b9-9b2d-94ca3786d412
:END:
#+begin_src sh
if command -v pnpm >/dev/null 2>&1; then
  export PNPM_HOME="${HOME}/.local/share/pnpm"
  case ":$PATH:" in
    ,*":$PNPM_HOME:"*) ;;
    ,*) export PATH="$PNPM_HOME:$PATH" ;;
  esac
fi
#+end_src

**** by-system
:PROPERTIES:
:CUSTOM_ID: ae9f0440-f852-40dd-aace-a7a4d1825263
:END:
#+begin_src sh
if [[ -x "${system_rc_file}_i" ]]; then
  . "${system_rc_file}_i"
fi
#+end_src

** termux

*** non-interactive
:PROPERTIES:
:header-args:sh: :tangle (zr-org-by-tangle-dir "termux")
:END:

**** ssl_cert
:PROPERTIES:
:CUSTOM_ID: 6b4885c2-c3f7-4f7a-b888-16466bd7cec9
:END:
#+begin_src sh
export SSL_CERT_DIR=$PREFIX/etc/tls/
#+end_src

**** network
:PROPERTIES:
:CUSTOM_ID: c443b8e1-b807-4f43-a652-32b65c10ae0a
:END:
#+begin_src sh
check_home_network() {
  termux-wifi-connectioninfo  | grep -q '\(pppoppt\|ppptppo\)'
}
#+end_src

**** retroarch
:PROPERTIES:
:CUSTOM_ID: 289bd6c9-63c0-467b-819b-ea82aa91863e
:END:
#+begin_src sh
retroarch_sync_pc() {
  if check_home_network && check_smb_connection 'smb://192.168.0.110/retroarch-sync/1.txt'; then
    for dir in saves states; do
      local remote="retroarch-sync:retroarch-sync/${dir}"
      rclone_sync_dir "/storage/emulated/0/RetroArch" "$dir" "$remote"
    done
  fi
}
#+end_src

*** interactive
:PROPERTIES:
:header-args:sh: :tangle (zr-org-by-tangle-dir "termux_i")
:END:

**** splash-screen
:PROPERTIES:
:CUSTOM_ID: ba4e3893-d838-4df9-8fe2-5b14189c555f
:END:
#+begin_src sh
zr-cli wlan-ip
#+end_src

**** reload-settings
:PROPERTIES:
:CUSTOM_ID: fb062777-5c33-4eaa-921a-59f969b3c665
:END:
#+begin_src sh
zr-reload-settings() {
  local screen=normal
  if [[ "$(zr-cli screen minip)" == "0" ]]; then
    screen=mini
  fi
  cat ~/.termux/{base,$screen}.properties > ~/.termux/termux.properties
  termux-reload-settings
}

if [ -f "~/.termux/base.properties" ]; then
  zr-reload-settings
fi
#+end_src
