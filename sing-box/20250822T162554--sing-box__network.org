#+title:      sing-box
#+date:       [2025-08-22 Fri 16:25]
#+filetags:   :network:
#+identifier: 20250822T162554

* tangle
#+begin_src elisp
(zr-org-babel-json-format "client-config")
(zr-org-babel-json-format "server-config")
(let ((zr-local-pls (plstore-open "sing-box.pls"))
      (client-dir "_tangle/client/")
      (delete-by-moving-to-trash))
  (delete-directory "_tangle" t)
  (org-babel-tangle)
  (mkdir client-dir t)
  (dolist (f (directory-files "." nil "^_.+.json" t))
    (copy-file f client-dir t))
  (call-process "sing-box" nil 0 nil "merge"
                (expand-file-name "_500-merge.json" client-dir)
                "-C" "_tangle/tmp/")
  (plstore-close zr-local-pls))
#+end_src

* config
:PROPERTIES:
:CUSTOM_ID: 3aeea361-850d-4cc8-b292-065568c194d3
:header-args:json: :var hy_obfs_pass=(substring (json-serialize (plist-get (cdr (plstore-get zr-local-pls "hy")) :obfs-pass)) 1 -1)
:header-args:json+: :var hy_user_name=(substring (json-serialize (plist-get (cdr (plstore-get zr-local-pls "hy")) :user-name)) 1 -1)
:header-args:json+: :var hy_user_pass=(substring (json-serialize (plist-get (cdr (plstore-get zr-local-pls "hy")) :user-pass)) 1 -1)
:header-args:json+: :var hy_host=(substring (json-serialize (plist-get (cdr (plstore-get zr-local-pls "hy")) :host)) 1 -1)
:END:

** client
:PROPERTIES:
:tangle-dir: _tangle/tmp
:CUSTOM_ID: 4acfcf10-2bef-4815-af7a-fd5f0271c77f
:END:

*** base
:PROPERTIES:
:CUSTOM_ID: fed30130-cdf9-42cb-805c-50dbb7b4c5bf
:END:
#+header: :var hy_ip=(substring (json-serialize (plist-get (cdr (plstore-get zr-local-pls "hy")) :ip)) 1 -1)
#+header: :var jsdelivr="https://fastly.jsdelivr.net"
#+name: client-config
#+begin_src json :tangle (zr-org-by-tangle-dir "500-base.json") :mkdirp t
{
  "dns": {
    "final": "dns_alidns_doh_ip",
    "rules": [
      {
        "ip_accept_any": true,
        "server": "hosts-in"
      }
    ],
    "servers": [
      {
        "server": "8.8.8.8",
        "tag": "google",
        "type": "tls"
      },
      {
        "server": "223.5.5.5",
        "server_port": 443,
        "tag": "dns_alidns_doh_ip",
        "type": "https"
      }
    ],
    "strategy": "ipv4_only"
  },
  "inbounds": [
    {
      "listen_port": 10805,
      "set_system_proxy": false,
      "tag": "mixed-in",
      "type": "mixed"
    }
  ],
  "outbounds": [
    {
      "tag": "direct",
      "type": "direct"
    },
    {
      "interrupt_exist_connections": false,
      "outbounds": [
        "hy"
      ],
      "tag": "auto",
      "type": "urltest"
    },
    {
      "obfs": {
        "password": "$hy_obfs_pass",
        "type": "salamander"
      },
      "password": "$hy_user_pass",
      "server": "$hy_ip",
      "server_port": 30104,
      "tag": "hy",
      "tls": {
        "enabled": true,
        "server_name": "$hy_host"
      },
      "type": "hysteria2"
    }
  ],
  "route": {
    "auto_detect_interface": true,
    "default_domain_resolver": {
      "server": "dns_alidns_doh_ip"
    },
    "final": "direct",
    "rule_set": [
      {
        "format": "binary",
        "tag": "geoip-private",
        "type": "remote",
        "url": "$jsdelivr/gh/chocolate4u/Iran-sing-box-rules@rule-set/geoip-private.srs"
      },
      {
        "format": "binary",
        "tag": "geoip-cn",
        "type": "remote",
        "url": "$jsdelivr/gh/chocolate4u/Iran-sing-box-rules@rule-set/geoip-cn.srs"
      },
      {
        "format": "binary",
        "tag": "geosite-cn",
        "type": "remote",
        "url": "$jsdelivr/gh/chocolate4u/Iran-sing-box-rules@rule-set/geosite-cn.srs"
      },
      {
        "format": "binary",
        "tag": "geoip-cloudflare",
        "type": "remote",
        "url": "$jsdelivr/gh/chocolate4u/Iran-sing-box-rules@rule-set/geoip-cloudflare.srs"
      },
      {
        "format": "binary",
        "tag": "geosite-cloudflare",
        "type": "remote",
        "url": "$jsdelivr/gh/chocolate4u/Iran-sing-box-rules@rule-set/geosite-cloudflare.srs"
      }
    ],
    "rules": [
      {
        "action": "route-options",
        "override_address": "162.159.138.33",
        "rule_set": [
          "geoip-cloudflare",
          "geosite-cloudflare"
        ]
      },
      {
        "outbound": "direct",
        "rule_set": [
          "geosite-cn",
          "geoip-cn",
          "geoip-private"
        ]
      },
      {
        "outbound": "auto",
        "rule_set": [
          "global-rules"
        ]
      }
    ]
  }
}
#+end_src

*** proxy
:PROPERTIES:
:CUSTOM_ID: 71dde8a4-cea2-4a9d-8e22-9e7d7fbb85f7
:END:
#+begin_src json :tangle (zr-org-by-tangle-dir "500-global-rules.json")
<<gen-gloabl-rules()>>
#+end_src

#+name: gen-gloabl-rules
#+begin_src elisp
(let ((raw (multisession-value zr-net-proxy-rules-hash))
      suffix)
  (maphash (lambda (k v) (push k suffix)) raw)
  (json-serialize
   `((route . (rule_set [((tag . "global-rules")
                          (rules . [((domain_suffix . ,(vconcat suffix)))]))])))))
#+end_src

** server
:PROPERTIES:
:tangle-dir: _tangle/server
:CUSTOM_ID: b85ab91b-1175-4b51-9f3c-f37a0b589979
:END:

#+header: :var cf_token=(substring (json-serialize (plist-get (cdr (plstore-get zr-local-pls "cf")) :api-token)) 1 -1)
#+header: :var hy_masq=(substring (json-serialize (plist-get (cdr (plstore-get zr-local-pls "hy")) :masq)) 1 -1)
#+header: :var hy_email=(substring (json-serialize (plist-get (cdr (plstore-get zr-local-pls "hy")) :email)) 1 -1)
#+name: server-config
#+begin_src json :tangle (zr-org-by-tangle-dir "config.json") :mkdirp t
{
  "inbounds": [
    {
      "down_mbps": 500,
      "listen": "::",
      "listen_port": 30104,
      "masquerade": "$hy_masq",
      "obfs": {
        "password": "$hy_obfs_pass",
        "type": "salamander"
      },
      "tls": {
        "acme": {
          "dns01_challenge": {
            "api_token": "$cf_token",
            "provider": "cloudflare"
          },
          "domain": "$hy_host",
          "email": "$hy_email"
        },
        "enabled": true,
        "server_name": "$hy_host"
      },
      "type": "hysteria2",
      "up_mbps": 500,
      "users": [
        {
          "name": "$hy_user_name",
          "password": "$hy_user_pass"
        }
      ]
    }
  ],
  "log": {
    "level": "info"
  },
  "outbounds": [
    {
      "type": "direct"
    }
  ]
}
#+end_src
